== O'Reilly Atlas

A number of recent projects have demonstrated that federal documentation is ripe for disruption.  For example, http://project-open-data.github.io/[Project open data] allows citizens to actively contribute to the open data conversation by collaboratively editing policy documents using GitHub. https://www.healthcare.gov/[healthcare.gov], a much larger project pioneered by Bryan Sivak, uses git and a number of open source tools to deliver results much quicker, much less complex, and at much lower costs that traditional methods. (See http://www.hhs.gov/digitalstrategy/blog/2013/04/new-heathcare-open-cms-free.html[New Healthcare.gov is Open, CMS-Free] for details.)  These system have a number of traits in common:

* They use a basic text markup called Markdown for formatting
* They are Web-first
* They enable massive collaboration via Git and GitHub

Where these system fall down, however, is that while they are outstanding for disseminating information via the Web, they have a number of key limitations:

* The information cannot readily be repacked for distribution in other formats, such a Mobi (for the Kindle), EPUB (for the iPad), or PDF (either for web distribution), or print on demand.
* It is difficult to create richly structured, complex information, such as a table of contents, cross references, an index, or footnotes.
* Despite its simplicity, Markdown presents a barrier to entry to many non-technical authors
* Similarly, Git and GitHub present challenges to non-technical users.

For the past year and a half, O'Reilly has been working on a toolset called Atlas that addresses these shortcomings, while keeping the fundamental powers of the "CMS-less approach" to content creation.  We currently produce about 80% of our titles using Atlas, and expect to rapidly close the remaining 20% by the middle of next year.  Atlas has the following key features:

* Authors can write in a WYSIWYG editor or in a markup language like Markdown or AsciiDoc 
* Authors can build EPUB, Mobi, PDF, and a website from a single source
* Authors or designers can design "themes" using CSS and easily apply them to all formats
* Rich content types with intelligent fallbacks built in
* Content is stored in GitHub, enabling massive collaboration
* API driven, so that content formats can be produced and distributed programatically


===  Editing Environments

Atlas supports two key content editor modes: a MS Word-like WYSIWYG editing mode, and a text markup mode.  In the WYSIWYG mode, the author writed in an online environment that is similar to a tradional word processor, like MS Word.

image::images/doe_wysiwyg_editor.png[]

In the text markup mode, the author can use either Markdown or Asciidoc, a related markup language that is much more robust than Markdown for complex information. 

image::images/doe_texteditor.png[]

=== Build All Formats from a Single Source

Like the web, Atlas separates content from how it is styled and presented.  Once authors have writtent their material, they can "build" it into any of the major publishing and distribution formats, such as PDF, EPUB, MOBI, or HTML (for publication on the web).  The author simply drags and drops the files in the order he or she would like them to appear and Atlas handles the rest.  Importantly, Atlas uses O'Reilly Media's industry leading publishing toolchain, so the output formats are suitable for distribution in all major print and digital channels.

image::images/doe_build.png[]

=== Content Themes

Atlas "themes" allow the author or designer to style the various output formats using CSS.  Consequently, the same content in Atlas can be easily restyled into almost any design possible.  For example, the following figure shows the same content, but with two different themes.

image::images/doe_same_content_different_theme.png[]

Atlas themes are also important because reflowable formats like ebooks and websites have very different design constraints than fixed formats like PDF or print.  Consequently, it's important that designers be able to easily create different styles that are consistent across the formats. 

=== Rich Content

While Atlas is one of the few ebook publishing tools that can also produce professional quality print material, it can also take advantage of all the rich possibilities enabled by the web.  Many books that O'Reilly publishes as tradional print books are also available on the http://atlas.oreilly.com[Atlas reader sites] in an enhanced edition that can include video, audio, interactive data visualizations, and other features that are not available in print.  Here are a few examples:

* http://chimera.labs.oreilly.com/books/1234000001552/ch04.html#s04_5[Web Audio API] has interactive tools that allow the reader to manipulate the examples described in the book.
* http://chimera.labs.oreilly.com/books/1234000001552/ch04.html#s04_5[Interactive Data Visualization for the Web] contains live data visualizations that readers can manipulate using a "Try it now" section.
* http://chimera.labs.oreilly.com/books/1234000001654/ch08.html#the_geo_blaster_basic_full_source[HTML5 Canvas] allows the reader to play a game that is described in the book itself.



=== Content Stored in GitHub

Like http://prose.io[prose.io], the system used to build http://project-open-data.github.io/[Project open data], Atlas stores all content natively in GitHub using the GitHub APIs.  This means that all content in Atlas can take full advantage of the unrivaled collaborative power of GitHub, as well as the rich, underlying power of Git for versioning, change tracking, and auditing.

image::images/doe_content_on_git.png[]


